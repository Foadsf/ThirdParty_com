#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2012 OpenFOAM Foundation
#    \\/     M anipulation  | Copyright (C) 2016 OpenCFD Ltd.
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     makeGperftools
#
# Description
#     Build script for gperftools
#
#------------------------------------------------------------------------------
# Get gperftools version
. $WM_PROJECT_DIR/etc/config.sh/functions
unset -f _foamAddPath _foamAddLib _foamAddMan # get settings only

_foamSource $($WM_PROJECT_DIR/bin/foamEtcFile config.sh/gperftools)

gperftoolsPACKAGE=${gperftools_version:-gperftools-system}

#------------------------------------------------------------------------------
# Run from third-party directory only
wmakeCheckPwd "$WM_THIRD_PARTY_DIR" || {
    echo "Error: Current directory is not \$WM_THIRD_PARTY_DIR"
    echo "    The environment variables are inconsistent with the installation."
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}
. etc/tools/ThirdPartyFunctions
#------------------------------------------------------------------------------
usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

usage: ${0##*/} [gperftools-VERSION]
options:
  -gcc              Force gcc/g++ instead of the values from \$WM_CC, \$WM_CXX
  -help

* build gperftools
      $gperftoolsPACKAGE

USAGE
    exit 1
}
#------------------------------------------------------------------------------
# Ensure configure gets the correct C/C++ compiler
[ -n "$WM_CC" ]  && export CC="$WM_CC"
[ -n "$WM_CXX" ] && export CXX="$WM_CXX"

# Parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    -h | -help)
        usage
        ;;
    -gcc)
        export CC=gcc    # use gcc/g++
        export CXX=g++
        ;;
    gperftools-[0-9]* | gperftools-svn* | gperftools-git)
        gperftoolsPACKAGE="${1%%/}"
        ;;
    *)
        die "unknown option/argument: '$1'"
        ;;
    esac
    shift
done

[ -n "$gperftoolsPACKAGE" ] || die "The gperftools-VERSION was not specified"

# Nothing to build
if _foamIsNone $gperftoolsPACKAGE
then
    echo "Using gperftools-none (skip ThirdParty build of gperftools)"
    exit 0
elif _foamIsSystem $gperftoolsPACKAGE
then
    echo "Using gperftools-system (skip ThirdParty build of gperftools)"
    exit 0
fi

#------------------------------------------------------------------------------
#
# Build gperftools
#
GPERFTOOLS_SOURCE_DIR=$sourceBASE/$gperftoolsPACKAGE
GPERFTOOLS_ARCH_PATH=$installBASE/$gperftoolsPACKAGE

echo "---------------"
if [ -d "$GPERFTOOLS_ARCH_PATH" ]
then
    echo "Already built: $gperftoolsPACKAGE"
else
    echo "Starting build: $gperftoolsPACKAGE"
    (
        buildDIR=$buildBASE/$gperftoolsPACKAGE

        cd $GPERFTOOLS_SOURCE_DIR || exit 1

        make distclean 2>/dev/null

        rm -rf $GPERFTOOLS_ARCH_PATH
        rm -rf $buildDIR
        mkdir -p $buildDIR
        cd $buildDIR

        set -x
        $GPERFTOOLS_SOURCE_DIR/configure \
            --prefix=$GPERFTOOLS_ARCH_PATH \
        && make -j $WM_NCOMPPROCS \
        && make install \
        && echo "Built: $gperftoolsPACKAGE" \
    ) || {
        echo "Error building: $gperftoolsPACKAGE"
        exit 1
    }
fi

#------------------------------------------------------------------------------
