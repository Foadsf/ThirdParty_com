#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2018-2019 OpenCFD Ltd.
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# This file is part of OpenFOAM, licensed under the GNU General Public License
# <http://www.gnu.org/licenses/>.
#
# Script
#     makeAdios2
#
# Description
#     Build script for ADIOS2
#
# ----------------------------------------------
# NO USER-CONFIGURABLE SETTINGS WITHIN THIS FILE
#------------------------------------------------------------------------------
# Run from third-party directory only
cd ${0%/*} && wmakeCheckPwd "$WM_THIRD_PARTY_DIR" 2>/dev/null || {
    echo "Error (${0##*/}) : not located in \$WM_THIRD_PARTY_DIR"
    echo "    Check your OpenFOAM environment and installation"
    exit 1
}
. etc/tools/ThirdPartyFunctions
#------------------------------------------------------------------------------
# ADIOS2 version from OpenFOAM etc/config.sh file:
_foamConfig adios2

adiosPACKAGE=${adios2_version:-adios-none}

#------------------------------------------------------------------------------
usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

usage: ${0##*/} [OPTION] [adios-VERSION]
options:
  -gcc          Force use of gcc/g++
  -cmake PATH   With cmake from the given path
  -help

* Build ADIOS2
      $adiosPACKAGE

USAGE
    exit 1
}
#------------------------------------------------------------------------------
exportCompiler minimal  # Minimal compiler info for CMake/configure

# Parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    '') ;;      # Ignore empty
    -h | -help) usage   ;;
    -gcc)       useGcc  ;;

    -cmake)
        [ "$#" -ge 2 ] || die "'$1' option requires an argument"
        CMAKE_PATH="${2%%/}"
        shift
        ;;
    ADIOS2-[1-9]* | ADIOS2-git* | adios-[1-9]* | ADIOS-git*)
        adiosPACKAGE="${1%%/}"
        ;;
    adios2-[1-9]* | adios2-git* | adios-[1-9]* | adios-git*)
        adiosPACKAGE="${1%%/}"
        ;;
    *)
        die "unknown option/argument: '$1'"
        ;;
    esac
    shift
done

[ -n "$adiosPACKAGE" ] || die "The adios2-VERSION was not specified"

# nothing to build
if _foamIsNone "$adiosPACKAGE"
then
    echo "Using adios-none (skip ThirdParty build of ADIOS)"
    exit 0
elif _foamIsSystem "$adiosPACKAGE"
then
    echo "Using adios-system"
    exit 0
fi

#------------------------------------------------------------------------------
#
# Build ADIOS
#   ADIOS2_SOURCE_DIR : location of the original sources
#   ADIOS2_ARCH_PATH  : installation directory

ADIOS2_SOURCE_DIR=$sourceBASE/$adiosPACKAGE
ADIOS2_ARCH_PATH=$installBASE/$adiosPACKAGE

: ${FOAM_MPI:=dummy}

echo
echo ========================================
echo "Build adios library $adiosPACKAGE for $FOAM_MPI"
echo


# Needs future adjustment
# - for shared library
# - for mpi-specific library locations
if [ -f $ADIOS2_ARCH_PATH/include/adios.h \
  -a -r $ADIOS2_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH/libadios_${FOAM_MPI}.a ]
then
    echo "    ADIOS2 header in $ADIOS2_ARCH_PATH/include"
    ### echo "    ADIOS2 libs   in $FOAM_EXT_LIBBIN"           # dynamic
    echo "    ADIOS2 libs   in $ADIOS2_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH" # static
else
    # CMake options often lag the configure ones
    echo "Starting build: $adiosPACKAGE (using cmake)"
    echo
    (
        buildDIR=$buildBASE/$adiosPACKAGE
        cd $ADIOS2_SOURCE_DIR || exit 1
        export GIT_DIR=$PWD/.git # Mask seeing our own git-repo

        applyPatch $adiosPACKAGE $ADIOS2_SOURCE_DIR

        # Remove any existing build folder and recreate
        rm -rf $ADIOS2_ARCH_DIR
        rm -rf $buildDIR 2>/dev/null
        mkdir -p $buildDIR

        # May not work properly with FOAM_MPI = dummy
        if [ "$FOAM_MPI" = dummy ]
        then
            configOpt="$configOpt --without-mpi"
        else
            CC=mpicc
            CXX=mpicxx
        fi

        cmake=$(findCMake)

        # Install into lib64/
        cd $buildDIR && $cmake \
            -DCMAKE_INSTALL_PREFIX=$ADIOS2_ARCH_PATH \
            -DCMAKE_BUILD_TYPE=Release \
            -DADIOS2_USE_Fortran=FALSE \
            ${WM_QUIET:+-DCMAKE_RULE_MESSAGES=OFF} \
            $ADIOS2_SOURCE_DIR \
        && make -j $WM_NCOMPPROCS all \
        && make install \
        && echo "Built: $adiosPACKAGE"
    ) || {
        echo "Error building: $adiosPACKAGE"
    }
fi

# -----------------------------------------------------------------------------
